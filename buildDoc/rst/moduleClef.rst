.. _moduleClef:

music21.clef
============

.. WARNING: DO NOT EDIT THIS FILE: AUTOMATICALLY GENERATED

.. module:: music21.clef

.. function:: standardClefFromXN()

Returns a Clef object given a string like "G2" or "F4" etc. 

Class Clef
----------

.. class:: Clef


    Class inherits from: :class:`music21.base.Music21Object`

    .. attribute:: octaveChange

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    .. attribute:: sign

    No documentation. 

    .. attribute:: line

    No documentation. 

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    .. attribute:: mx

    Given a music21 Clef object, return a MusicXML Clef object. This might be moved only into PitchClef. 

    >>> b = GClef()
    >>> a = b.mx
    >>> a.get('sign')
    'G' 
    >>> b = Treble8vbClef()
    >>> b.octaveChange
    -1 
    >>> a = b.mx
    >>> a.get('sign')
    'G' 
    >>> a.get('clefOctaveChange')
    -1 

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class TrebleClef
----------------

.. class:: TrebleClef


    Class inherits from: :class:`music21.clef.GClef`, :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    .. attribute:: lowestLine

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class BassClef
--------------

.. class:: BassClef


    Class inherits from: :class:`music21.clef.FClef`, :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    .. attribute:: lowestLine

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class Treble8vaClef
-------------------

.. class:: Treble8vaClef


    Class inherits from: :class:`music21.clef.TrebleClef`, :class:`music21.clef.GClef`, :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    Attributes inherited from :class:`music21.clef.TrebleClef`: ``lowestLine``

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class GSopranoClef
------------------

.. class:: GSopranoClef


    Class inherits from: :class:`music21.clef.GClef`, :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    .. attribute:: lowestLine

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class TabClef
-------------

.. class:: TabClef


    Class inherits from: :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class FClef
-----------

.. class:: FClef


    Class inherits from: :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class NoClef
------------

.. class:: NoClef


    Class inherits from: :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class AltoClef
--------------

.. class:: AltoClef


    Class inherits from: :class:`music21.clef.CClef`, :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    .. attribute:: lowestLine

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class FBaritoneClef
-------------------

.. class:: FBaritoneClef


    Class inherits from: :class:`music21.clef.FClef`, :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    .. attribute:: lowestLine

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class Treble8vbClef
-------------------

.. class:: Treble8vbClef


    Class inherits from: :class:`music21.clef.TrebleClef`, :class:`music21.clef.GClef`, :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    Attributes inherited from :class:`music21.clef.TrebleClef`: ``lowestLine``

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class PercussionClef
--------------------

.. class:: PercussionClef


    Class inherits from: :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class FrenchViolinClef
----------------------

.. class:: FrenchViolinClef


    Class inherits from: :class:`music21.clef.GClef`, :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    .. attribute:: lowestLine

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class GClef
-----------

.. class:: GClef


    Class inherits from: :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class Bass8vbClef
-----------------

.. class:: Bass8vbClef


    Class inherits from: :class:`music21.clef.FClef`, :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    .. attribute:: lowestLine

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class TenorClef
---------------

.. class:: TenorClef


    Class inherits from: :class:`music21.clef.CClef`, :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    .. attribute:: lowestLine

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class SopranoClef
-----------------

.. class:: SopranoClef


    Class inherits from: :class:`music21.clef.CClef`, :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    .. attribute:: lowestLine

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class CBaritoneClef
-------------------

.. class:: CBaritoneClef


    Class inherits from: :class:`music21.clef.CClef`, :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    .. attribute:: lowestLine

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class PitchClef
---------------

.. class:: PitchClef


    Class inherits from: :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    .. attribute:: lilyName

    str(object) -> string Return a nice string representation of the object. If the argument is a string, the return value is the same object. 

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    .. attribute:: lily

    No documentation. 

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class SubBassClef
-----------------

.. class:: SubBassClef


    Class inherits from: :class:`music21.clef.FClef`, :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    .. attribute:: lowestLine

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class Bass8vaClef
-----------------

.. class:: Bass8vaClef


    Class inherits from: :class:`music21.clef.FClef`, :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    .. attribute:: lowestLine

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class CClef
-----------

.. class:: CClef


    Class inherits from: :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class MezzoSopranoClef
----------------------

.. class:: MezzoSopranoClef


    Class inherits from: :class:`music21.clef.CClef`, :class:`music21.clef.PitchClef`, :class:`music21.clef.Clef`, :class:`music21.base.Music21Object`

    .. attribute:: lowestLine

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    Attributes inherited from :class:`music21.clef.PitchClef`: ``lilyName``

    Attributes inherited from :class:`music21.clef.Clef`: ``octaveChange``, ``sign``, ``line``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.clef.PitchClef`: ``lily``

    Properties inherited from :class:`music21.clef.Clef`: ``mx``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


