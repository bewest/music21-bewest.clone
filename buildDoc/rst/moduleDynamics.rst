.. _moduleDynamics:

music21.dynamics
================

.. WARNING: DO NOT EDIT THIS FILE: AUTOMATICALLY GENERATED

.. module:: music21.dynamics



.. function:: unitIntervalToName(n)

    Given a unit interval value, map to a dynamic name. 

Dynamic
-------

.. class:: Dynamic(value=None)

    Object representation of Dyanmics. 

    inherits from: :class:`~music21.base.Music21Object`

    **Dynamic** **attributes**

        Attributes without Documentation: `posPlacement`, `value`, `posRelativeY`, `posDefaultX`, `posDefaultY`, `longName`, `posRelativeX`, `englishName`

        Attributes inherited from :class:`~music21.base.Music21Object`: :attr:`~music21.base.Music21Object.id`, :attr:`~music21.base.Music21Object.groups`

    **Dynamic** **properties**

        .. attribute:: musicxml

            Provide a complete MusicXML representation. 

        .. attribute:: mx

            returns a musicxml.Direction object 

            >>> a = Dynamic('ppp')
            >>> a.posRelativeY = -10
            >>> b = a.mx
            >>> b[0][0][0].get('tag')
            'ppp' 
            >>> b.get('placement')
            'below' 

        Properties inherited from :class:`~music21.base.Music21Object`: :attr:`~music21.base.Music21Object.duration`, :attr:`~music21.base.Music21Object.offset`, :attr:`~music21.base.Music21Object.parent`, :attr:`~music21.base.Music21Object.priority`

    **Dynamic** **methods**

        Methods inherited from :class:`~music21.base.Music21Object`: :meth:`~music21.base.Music21Object.searchParentByAttr`, :meth:`~music21.base.Music21Object.getContextAttr`, :meth:`~music21.base.Music21Object.setContextAttr`, :meth:`~music21.base.Music21Object.addContext`, :meth:`~music21.base.Music21Object.addLocationAndParent`, :meth:`~music21.base.Music21Object.freezeIds`, :meth:`~music21.base.Music21Object.getContextByClass`, :meth:`~music21.base.Music21Object.getOffsetBySite`, :meth:`~music21.base.Music21Object.hasContext`, :meth:`~music21.base.Music21Object.isClass`, :meth:`~music21.base.Music21Object.show`, :meth:`~music21.base.Music21Object.unfreezeIds`, :meth:`~music21.base.Music21Object.unwrapWeakref`, :meth:`~music21.base.Music21Object.wrapWeakref`, :meth:`~music21.base.Music21Object.write`


Wedge
-----

.. class:: Wedge(value=None)

    Object model of crescendeo/decrescendo wedges. 

    inherits from: :class:`~music21.base.Music21Object`

    **Wedge** **attributes**

        Attributes without Documentation: `posPlacement`, `spread`, `type`

        Attributes inherited from :class:`~music21.base.Music21Object`: :attr:`~music21.base.Music21Object.id`, :attr:`~music21.base.Music21Object.groups`

    **Wedge** **properties**

        .. attribute:: mx

            returns a musicxml.Direction object 

            >>> a = Wedge()
            >>> a.type = 'crescendo'
            >>> mxDirection = a.mx
            >>> mxWedge = mxDirection.getWedge()
            >>> mxWedge.get('type')
            'crescendo' 

        Properties inherited from :class:`~music21.base.Music21Object`: :attr:`~music21.base.Music21Object.duration`, :attr:`~music21.base.Music21Object.offset`, :attr:`~music21.base.Music21Object.parent`, :attr:`~music21.base.Music21Object.priority`

    **Wedge** **methods**

        Methods inherited from :class:`~music21.base.Music21Object`: :meth:`~music21.base.Music21Object.searchParentByAttr`, :meth:`~music21.base.Music21Object.getContextAttr`, :meth:`~music21.base.Music21Object.setContextAttr`, :meth:`~music21.base.Music21Object.addContext`, :meth:`~music21.base.Music21Object.addLocationAndParent`, :meth:`~music21.base.Music21Object.freezeIds`, :meth:`~music21.base.Music21Object.getContextByClass`, :meth:`~music21.base.Music21Object.getOffsetBySite`, :meth:`~music21.base.Music21Object.hasContext`, :meth:`~music21.base.Music21Object.isClass`, :meth:`~music21.base.Music21Object.show`, :meth:`~music21.base.Music21Object.unfreezeIds`, :meth:`~music21.base.Music21Object.unwrapWeakref`, :meth:`~music21.base.Music21Object.wrapWeakref`, :meth:`~music21.base.Music21Object.write`


