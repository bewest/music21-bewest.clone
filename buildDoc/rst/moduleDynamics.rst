.. _moduleDynamics:

music21.dynamics
================

.. WARNING: DO NOT EDIT THIS FILE: AUTOMATICALLY GENERATED

.. module:: music21.dynamics

.. function:: unitIntervalToName()

Given a unit interfal value, map to a dynamic name 

Class Dynamic
-------------

.. class:: Dynamic

    Object representation of Dyanmics. 

    Class inherits from: :class:`music21.base.Music21Object`

    .. attribute:: posPlacement

    str(object) -> string Return a nice string representation of the object. If the argument is a string, the return value is the same object. 

    .. attribute:: value

    No documentation. 

    .. attribute:: posRelativeY

    No documentation. 

    .. attribute:: posDefaultX

    No documentation. 

    .. attribute:: posDefaultY

    No documentation. 

    .. attribute:: longName

    No documentation. 

    .. attribute:: posRelativeX

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    .. attribute:: englishName

    No documentation. 

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    .. attribute:: musicxml

    Provide a complete MusicXM: representation. 

    .. attribute:: mx

    returns a musicxml.Direction object 

    >>> a = Dynamic('ppp')
    >>> a.posRelativeY = -10
    >>> b = a.mx
    >>> b[0][0][0].get('tag')
    'ppp' 
    >>> b.get('placement')
    'below' 

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``addContext()``, ``addLocationAndParent()``, ``getContextAttr()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``searchParent()``, ``setContextAttr()``, ``show()``, ``write()``


Class Wedge
-----------

.. class:: Wedge

    Object model of crescendeo/decrescendo wedges. 

    Class inherits from: :class:`music21.base.Music21Object`

    .. attribute:: posPlacement

    str(object) -> string Return a nice string representation of the object. If the argument is a string, the return value is the same object. 

    .. attribute:: spread

    No documentation. 

    .. attribute:: type

    No documentation. 

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    .. attribute:: mx

    returns a musicxml.Direction object 

    >>> a = Wedge()
    >>> a.type = 'crescendo'
    >>> mxDirection = a.mx
    >>> mxWedge = mxDirection.getWedge()
    >>> mxWedge.get('type')
    'crescendo' 

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``addContext()``, ``addLocationAndParent()``, ``getContextAttr()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``searchParent()``, ``setContextAttr()``, ``show()``, ``write()``


