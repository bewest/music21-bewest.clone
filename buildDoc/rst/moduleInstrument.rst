.. _moduleInstrument:

music21.instrument
==================

.. WARNING: DO NOT EDIT THIS FILE: AUTOMATICALLY GENERATED

.. module:: music21.instrument



Class Instrument
----------------

.. class:: Instrument


    Class inherits from: :class:`music21.base.Music21Object`

    **Class Instrument** **Attributes**

    .. attribute:: instrumentName

    No documentation. 

    .. attribute:: midiChannel

    No documentation. 

    .. attribute:: partId

    No documentation. 

    .. attribute:: partName

    No documentation. 

    .. attribute:: midiProgram

    No documentation. 

    .. attribute:: instrumentAbbreviation

    No documentation. 

    .. attribute:: transposition

    No documentation. 

    .. attribute:: partAbbreviation

    No documentation. 

    Attributes inherited from :class:`music21.base.Music21Object`: :attr:`music21.base.Music21Object.id`, :attr:`music21.base.Music21Object.groups`

    **Class Instrument** **Properties**

    .. attribute:: mx

    

    

    Properties inherited from :class:`music21.base.Music21Object`: :attr:`music21.base.Music21Object.duration`, :attr:`music21.base.Music21Object.offset`, :attr:`music21.base.Music21Object.parent`, :attr:`music21.base.Music21Object.priority`

    **Class Instrument** **Methods**

    .. method:: __init__()

    No documentation. 

    .. method:: bestName()

    Find a viable name, looking first at instrument, then part, then abbreviations. 

    .. method:: partIdRandomize()

    Force a unique id by using an MD5 

    Methods inherited from :class:`music21.base.Music21Object`: :meth:`music21.base.Music21Object.searchParent`, :meth:`music21.base.Music21Object.getContextAttr`, :meth:`music21.base.Music21Object.setContextAttr`, :meth:`music21.base.Music21Object.addContext`, :meth:`music21.base.Music21Object.addLocationAndParent`, :meth:`music21.base.Music21Object.getContextByClass`, :meth:`music21.base.Music21Object.getOffsetBySite`, :meth:`music21.base.Music21Object.isClass`, :meth:`music21.base.Music21Object.show`, :meth:`music21.base.Music21Object.write`


Class StringInstrument
----------------------

.. class:: StringInstrument


    Class inherits from: :class:`music21.instrument.Instrument`, :class:`music21.base.Music21Object`

    **Class StringInstrument** **Attributes**

    Attributes inherited from :class:`music21.instrument.Instrument`: :attr:`music21.instrument.Instrument.instrumentName`, :attr:`music21.instrument.Instrument.midiChannel`, :attr:`music21.instrument.Instrument.partId`, :attr:`music21.instrument.Instrument.partName`, :attr:`music21.instrument.Instrument.midiProgram`, :attr:`music21.instrument.Instrument.instrumentAbbreviation`, :attr:`music21.instrument.Instrument.transposition`, :attr:`music21.instrument.Instrument.partAbbreviation`

    Attributes inherited from :class:`music21.base.Music21Object`: :attr:`music21.base.Music21Object.id`, :attr:`music21.base.Music21Object.groups`

    **Class StringInstrument** **Properties**

    .. attribute:: stringPitches

    stringPitches is a property that stores a list of Pitches (or pitch names, such as "C4") that represent the pitch of the open strings from lowest to highest[#reentrant]_ 

    >>> vln1 = Violin()
    >>> vln1.stringPitches
    [G3, D4, A4, E5] 
    instrument.stringPitches are full pitch objects, not just names 
    >>> [x.octave for x in vln1.stringPitches]
    [3, 4, 4, 5] 
    scordatura for Scelsi's *Anahit*. N.B. string to pitch conversion 
    >>> vln1.stringPitches = ["G3","G4","B4","D4"]
    >>> vln1.stringPitches
    [G3, G4, B4, D4] 
    ..[#reentrant] In some tuning methods such as reentrant tuning on the ukulele, 
    lute, or five-string banjo the order might not strictly be from lowest to 
    highest.  The same would hold true for certain violin scordatura pieces, such 
    as some of Biber's *Mystery Sonatas* 

    Properties inherited from :class:`music21.instrument.Instrument`: :attr:`music21.instrument.Instrument.mx`

    Properties inherited from :class:`music21.base.Music21Object`: :attr:`music21.base.Music21Object.duration`, :attr:`music21.base.Music21Object.offset`, :attr:`music21.base.Music21Object.parent`, :attr:`music21.base.Music21Object.priority`

    **Class StringInstrument** **Methods**

    Methods inherited from :class:`music21.instrument.Instrument`: :meth:`music21.instrument.Instrument.__init__`, :meth:`music21.instrument.Instrument.bestName`, :meth:`music21.instrument.Instrument.partIdRandomize`

    Methods inherited from :class:`music21.base.Music21Object`: :meth:`music21.base.Music21Object.searchParent`, :meth:`music21.base.Music21Object.getContextAttr`, :meth:`music21.base.Music21Object.setContextAttr`, :meth:`music21.base.Music21Object.addContext`, :meth:`music21.base.Music21Object.addLocationAndParent`, :meth:`music21.base.Music21Object.getContextByClass`, :meth:`music21.base.Music21Object.getOffsetBySite`, :meth:`music21.base.Music21Object.isClass`, :meth:`music21.base.Music21Object.show`, :meth:`music21.base.Music21Object.write`


Class Viola
-----------

.. class:: Viola


    Class inherits from: :class:`music21.instrument.StringInstrument`, :class:`music21.instrument.Instrument`, :class:`music21.base.Music21Object`

    **Class Viola** **Attributes**

    .. attribute:: lowestNote

    An object for storing pitch values. All values are represented internally as a scale step (self.step), and octave and an accidental object. In addition, pitches know their pitchSpace representation (self._ps); altering any of the first three changes the pitchSpace representation. Similarly, altering the pitchSpace representation alters the first three. 

    Attributes inherited from :class:`music21.instrument.Instrument`: :attr:`music21.instrument.Instrument.instrumentName`, :attr:`music21.instrument.Instrument.midiChannel`, :attr:`music21.instrument.Instrument.partId`, :attr:`music21.instrument.Instrument.partName`, :attr:`music21.instrument.Instrument.midiProgram`, :attr:`music21.instrument.Instrument.instrumentAbbreviation`, :attr:`music21.instrument.Instrument.transposition`, :attr:`music21.instrument.Instrument.partAbbreviation`

    Attributes inherited from :class:`music21.base.Music21Object`: :attr:`music21.base.Music21Object.id`, :attr:`music21.base.Music21Object.groups`

    **Class Viola** **Properties**

    Properties inherited from :class:`music21.instrument.StringInstrument`: :attr:`music21.instrument.StringInstrument.stringPitches`

    Properties inherited from :class:`music21.instrument.Instrument`: :attr:`music21.instrument.Instrument.mx`

    Properties inherited from :class:`music21.base.Music21Object`: :attr:`music21.base.Music21Object.duration`, :attr:`music21.base.Music21Object.offset`, :attr:`music21.base.Music21Object.parent`, :attr:`music21.base.Music21Object.priority`

    **Class Viola** **Methods**

    .. method:: __init__()

    No documentation. 

    Methods inherited from :class:`music21.instrument.Instrument`: :meth:`music21.instrument.Instrument.bestName`, :meth:`music21.instrument.Instrument.partIdRandomize`

    Methods inherited from :class:`music21.base.Music21Object`: :meth:`music21.base.Music21Object.searchParent`, :meth:`music21.base.Music21Object.getContextAttr`, :meth:`music21.base.Music21Object.setContextAttr`, :meth:`music21.base.Music21Object.addContext`, :meth:`music21.base.Music21Object.addLocationAndParent`, :meth:`music21.base.Music21Object.getContextByClass`, :meth:`music21.base.Music21Object.getOffsetBySite`, :meth:`music21.base.Music21Object.isClass`, :meth:`music21.base.Music21Object.show`, :meth:`music21.base.Music21Object.write`


Class Violin
------------

.. class:: Violin


    Class inherits from: :class:`music21.instrument.StringInstrument`, :class:`music21.instrument.Instrument`, :class:`music21.base.Music21Object`

    **Class Violin** **Attributes**

    .. attribute:: lowestNote

    An object for storing pitch values. All values are represented internally as a scale step (self.step), and octave and an accidental object. In addition, pitches know their pitchSpace representation (self._ps); altering any of the first three changes the pitchSpace representation. Similarly, altering the pitchSpace representation alters the first three. 

    Attributes inherited from :class:`music21.instrument.Instrument`: :attr:`music21.instrument.Instrument.instrumentName`, :attr:`music21.instrument.Instrument.midiChannel`, :attr:`music21.instrument.Instrument.partId`, :attr:`music21.instrument.Instrument.partName`, :attr:`music21.instrument.Instrument.midiProgram`, :attr:`music21.instrument.Instrument.instrumentAbbreviation`, :attr:`music21.instrument.Instrument.transposition`, :attr:`music21.instrument.Instrument.partAbbreviation`

    Attributes inherited from :class:`music21.base.Music21Object`: :attr:`music21.base.Music21Object.id`, :attr:`music21.base.Music21Object.groups`

    **Class Violin** **Properties**

    Properties inherited from :class:`music21.instrument.StringInstrument`: :attr:`music21.instrument.StringInstrument.stringPitches`

    Properties inherited from :class:`music21.instrument.Instrument`: :attr:`music21.instrument.Instrument.mx`

    Properties inherited from :class:`music21.base.Music21Object`: :attr:`music21.base.Music21Object.duration`, :attr:`music21.base.Music21Object.offset`, :attr:`music21.base.Music21Object.parent`, :attr:`music21.base.Music21Object.priority`

    **Class Violin** **Methods**

    .. method:: __init__()

    No documentation. 

    Methods inherited from :class:`music21.instrument.Instrument`: :meth:`music21.instrument.Instrument.bestName`, :meth:`music21.instrument.Instrument.partIdRandomize`

    Methods inherited from :class:`music21.base.Music21Object`: :meth:`music21.base.Music21Object.searchParent`, :meth:`music21.base.Music21Object.getContextAttr`, :meth:`music21.base.Music21Object.setContextAttr`, :meth:`music21.base.Music21Object.addContext`, :meth:`music21.base.Music21Object.addLocationAndParent`, :meth:`music21.base.Music21Object.getContextByClass`, :meth:`music21.base.Music21Object.getOffsetBySite`, :meth:`music21.base.Music21Object.isClass`, :meth:`music21.base.Music21Object.show`, :meth:`music21.base.Music21Object.write`


Class Violoncello
-----------------

.. class:: Violoncello


    Class inherits from: :class:`music21.instrument.StringInstrument`, :class:`music21.instrument.Instrument`, :class:`music21.base.Music21Object`

    **Class Violoncello** **Attributes**

    .. attribute:: lowestNote

    An object for storing pitch values. All values are represented internally as a scale step (self.step), and octave and an accidental object. In addition, pitches know their pitchSpace representation (self._ps); altering any of the first three changes the pitchSpace representation. Similarly, altering the pitchSpace representation alters the first three. 

    Attributes inherited from :class:`music21.instrument.Instrument`: :attr:`music21.instrument.Instrument.instrumentName`, :attr:`music21.instrument.Instrument.midiChannel`, :attr:`music21.instrument.Instrument.partId`, :attr:`music21.instrument.Instrument.partName`, :attr:`music21.instrument.Instrument.midiProgram`, :attr:`music21.instrument.Instrument.instrumentAbbreviation`, :attr:`music21.instrument.Instrument.transposition`, :attr:`music21.instrument.Instrument.partAbbreviation`

    Attributes inherited from :class:`music21.base.Music21Object`: :attr:`music21.base.Music21Object.id`, :attr:`music21.base.Music21Object.groups`

    **Class Violoncello** **Properties**

    Properties inherited from :class:`music21.instrument.StringInstrument`: :attr:`music21.instrument.StringInstrument.stringPitches`

    Properties inherited from :class:`music21.instrument.Instrument`: :attr:`music21.instrument.Instrument.mx`

    Properties inherited from :class:`music21.base.Music21Object`: :attr:`music21.base.Music21Object.duration`, :attr:`music21.base.Music21Object.offset`, :attr:`music21.base.Music21Object.parent`, :attr:`music21.base.Music21Object.priority`

    **Class Violoncello** **Methods**

    .. method:: __init__()

    No documentation. 

    Methods inherited from :class:`music21.instrument.Instrument`: :meth:`music21.instrument.Instrument.bestName`, :meth:`music21.instrument.Instrument.partIdRandomize`

    Methods inherited from :class:`music21.base.Music21Object`: :meth:`music21.base.Music21Object.searchParent`, :meth:`music21.base.Music21Object.getContextAttr`, :meth:`music21.base.Music21Object.setContextAttr`, :meth:`music21.base.Music21Object.addContext`, :meth:`music21.base.Music21Object.addLocationAndParent`, :meth:`music21.base.Music21Object.getContextByClass`, :meth:`music21.base.Music21Object.getOffsetBySite`, :meth:`music21.base.Music21Object.isClass`, :meth:`music21.base.Music21Object.show`, :meth:`music21.base.Music21Object.write`


