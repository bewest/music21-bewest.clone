.. _moduleDynamics:

music21.dynamics
================

.. WARNING: DO NOT EDIT THIS FILE: AUTOMATICALLY GENERATED

.. module:: music21.dynamics

.. function:: unitIntervalToName()

Given a unit interfal value, map to a dynamic name 

Class Dynamic
-------------

.. class:: Dynamic

    Object representation of Dyanmics. 

    Class inherits from: :class:`music21.base.Music21Object`

    **Class Dynamic** **Attributes**

    .. attribute:: posPlacement

    No documentation. 

    .. attribute:: value

    No documentation. 

    .. attribute:: posRelativeY

    No documentation. 

    .. attribute:: posDefaultX

    No documentation. 

    .. attribute:: posDefaultY

    No documentation. 

    .. attribute:: longName

    No documentation. 

    .. attribute:: posRelativeX

    No documentation. 

    .. attribute:: englishName

    No documentation. 

    Attributes inherited from :class:`music21.base.Music21Object`: :attr:`music21.base.Music21Object.id`, :attr:`music21.base.Music21Object.groups`

    **Class Dynamic** **Properties**

    .. attribute:: musicxml

    Provide a complete MusicXM: representation. 

    .. attribute:: mx

    returns a musicxml.Direction object 

    >>> a = Dynamic('ppp')
    >>> a.posRelativeY = -10
    >>> b = a.mx
    >>> b[0][0][0].get('tag')
    'ppp' 
    >>> b.get('placement')
    'below' 

    Properties inherited from :class:`music21.base.Music21Object`: :attr:`music21.base.Music21Object.duration`, :attr:`music21.base.Music21Object.offset`, :attr:`music21.base.Music21Object.parent`, :attr:`music21.base.Music21Object.priority`

    **Class Dynamic** **Methods**

    Methods inherited from :class:`music21.base.Music21Object`: :meth:`music21.base.Music21Object.searchParent`, :meth:`music21.base.Music21Object.getContextAttr`, :meth:`music21.base.Music21Object.setContextAttr`, :meth:`music21.base.Music21Object.addContext`, :meth:`music21.base.Music21Object.addLocationAndParent`, :meth:`music21.base.Music21Object.getContextByClass`, :meth:`music21.base.Music21Object.getOffsetBySite`, :meth:`music21.base.Music21Object.isClass`, :meth:`music21.base.Music21Object.show`, :meth:`music21.base.Music21Object.write`


Class Wedge
-----------

.. class:: Wedge

    Object model of crescendeo/decrescendo wedges. 

    Class inherits from: :class:`music21.base.Music21Object`

    **Class Wedge** **Attributes**

    .. attribute:: posPlacement

    No documentation. 

    .. attribute:: spread

    No documentation. 

    .. attribute:: type

    No documentation. 

    Attributes inherited from :class:`music21.base.Music21Object`: :attr:`music21.base.Music21Object.id`, :attr:`music21.base.Music21Object.groups`

    **Class Wedge** **Properties**

    .. attribute:: mx

    returns a musicxml.Direction object 

    >>> a = Wedge()
    >>> a.type = 'crescendo'
    >>> mxDirection = a.mx
    >>> mxWedge = mxDirection.getWedge()
    >>> mxWedge.get('type')
    'crescendo' 

    Properties inherited from :class:`music21.base.Music21Object`: :attr:`music21.base.Music21Object.duration`, :attr:`music21.base.Music21Object.offset`, :attr:`music21.base.Music21Object.parent`, :attr:`music21.base.Music21Object.priority`

    **Class Wedge** **Methods**

    Methods inherited from :class:`music21.base.Music21Object`: :meth:`music21.base.Music21Object.searchParent`, :meth:`music21.base.Music21Object.getContextAttr`, :meth:`music21.base.Music21Object.setContextAttr`, :meth:`music21.base.Music21Object.addContext`, :meth:`music21.base.Music21Object.addLocationAndParent`, :meth:`music21.base.Music21Object.getContextByClass`, :meth:`music21.base.Music21Object.getOffsetBySite`, :meth:`music21.base.Music21Object.isClass`, :meth:`music21.base.Music21Object.show`, :meth:`music21.base.Music21Object.write`


