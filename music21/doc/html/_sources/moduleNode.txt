.. _moduleNode:

music21.node
============

.. WARNING: DO NOT EDIT THIS FILE: AUTOMATICALLY GENERATED

.. module:: music21.node

.. function:: fixed_writexml()


Class Node
----------

.. class:: Node


    

    .. attribute:: charData

    .. attribute:: tag


    .. method:: get()


    .. method:: getNewDoc()


    .. method:: loadAttrs()

    Given a SAX attrs object, load all atributes that are named within this object's _attr dictionary. 

    .. method:: merge()

    Given another similar or commonly used Node object, combine all attributes and return a new object. 

    >>> a = Node()
    >>> a.set('charData', 'green')
    >>> b = Node()
    >>> c = b.merge(a)
    >>> c.get('charData')
    'green' 

    .. method:: set()


    .. method:: setDefaults()

    provide defaults for all necessary attributes at this level 

    .. method:: toxml()

    Provides XML output as either a text string or as DOM node. This method can be called recursively to build up nodes on a DOM tree. This method will assume that if an self.charData attribute has been defined this is a text element for this node. Attributes, sub entities, and sub nodes are obtained via subclassed method calls. 

    .. method:: xmlStr()

    Shortcut method to provide quick xml out. 


Class NodeList
--------------

.. class:: NodeList

    Nodes that is designed to function as a list. In general, this is an node this only used to contain other nodes. List operations permit easy access and manipuatlooi 

    Inherits from: node.Node (of module :ref:`moduleNode`)

    .. attribute:: charData

    .. attribute:: componentList

    Inherited from node.Node (of module :ref:`moduleNode`): ``tag``

    .. method:: append()


    Inherited from node.Node (of module :ref:`moduleNode`): ``get()``, ``getNewDoc()``, ``loadAttrs()``, ``merge()``, ``set()``, ``setDefaults()``, ``toxml()``, ``xmlStr()``


