.. _moduleTempo:

music21.tempo
=============

.. WARNING: DO NOT EDIT THIS FILE: AUTOMATICALLY GENERATED

.. module:: music21.tempo

Class TempoMark
---------------

.. class:: TempoMark

    

    >>> tm = TempoMark("adagio")
    >>> tm.value
    'adagio' 

    Class inherits from: :class:`music21.base.Music21Object`

    .. attribute:: value

    No documentation. 

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


Class MetronomeMark
-------------------

.. class:: MetronomeMark

    

    >>> a = MetronomeMark(40)
    >>> a.number
    40 

    Class inherits from: :class:`music21.tempo.TempoMark`, :class:`music21.base.Music21Object`

    .. attribute:: number

    int(x[, base]) -> integer Convert a string or number to an integer, if possible.  A floating point argument will be truncated towards zero (this does not include a string representation of a floating point number!)  When converting a string, use the optional base.  It is an error to supply a base when converting a non-string.  If base is zero, the proper base is guessed based on the string content.  If the argument is outside the integer range a long object will be returned instead. 

    .. attribute:: referent

    No documentation. 

    Attributes inherited from :class:`music21.tempo.TempoMark`: ``value``

    Attributes inherited from :class:`music21.base.Music21Object`: ``id``, ``groups``

    Properties inherited from :class:`music21.base.Music21Object`: ``duration``, ``offset``, ``parent``, ``priority``

    Methods inherited from :class:`music21.base.Music21Object`: ``searchParent()``, ``getContextAttr()``, ``setContextAttr()``, ``addContext()``, ``addLocationAndParent()``, ``getContextByClass()``, ``getOffsetBySite()``, ``isClass()``, ``show()``, ``write()``


